{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');\n\nvar loadEntryPoint = require('./relay-hooks/loadEntryPoint');\n\nvar _require = require('./relay-hooks/loadQuery'),\n    loadQuery = _require.loadQuery;\n\nvar RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');\n\nvar useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');\n\nvar useFragment = require('./relay-hooks/useFragment');\n\nvar useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');\n\nvar useMutation = require('./relay-hooks/useMutation');\n\nvar usePaginationFragment = require('./relay-hooks/usePaginationFragment');\n\nvar usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');\n\nvar useQueryLoader = require('./relay-hooks/useQueryLoader');\n\nvar useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');\n\nvar useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');\n\nvar useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');\n\nvar useSubscription = require('./relay-hooks/useSubscription');\n\nvar RelayRuntime = require('relay-runtime');\n/**\n * The public interface for Relay Hooks.\n * This will eventually become the main public interface for react-relay.\n */\n\n\nmodule.exports = {\n  ConnectionHandler: RelayRuntime.ConnectionHandler,\n  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,\n  commitLocalUpdate: RelayRuntime.commitLocalUpdate,\n  commitMutation: RelayRuntime.commitMutation,\n  graphql: RelayRuntime.graphql,\n  readInlineData: RelayRuntime.readInlineData,\n  requestSubscription: RelayRuntime.requestSubscription,\n  EntryPointContainer: EntryPointContainer,\n  RelayEnvironmentProvider: RelayEnvironmentProvider,\n  fetchQuery: RelayRuntime.fetchQuery,\n  loadQuery: loadQuery,\n  loadEntryPoint: loadEntryPoint,\n  useFragment: useFragment,\n  useLazyLoadQuery: useLazyLoadQuery,\n  useEntryPointLoader: useEntryPointLoader,\n  useQueryLoader: useQueryLoader,\n  useMutation: useMutation,\n  usePaginationFragment: usePaginationFragment,\n  usePreloadedQuery: usePreloadedQuery,\n  useRefetchableFragment: useRefetchableFragment,\n  useRelayEnvironment: useRelayEnvironment,\n  useSubscribeToInvalidationState: useSubscribeToInvalidationState,\n  useSubscription: useSubscription\n};","map":{"version":3,"names":["EntryPointContainer","require","loadEntryPoint","_require","loadQuery","RelayEnvironmentProvider","useEntryPointLoader","useFragment","useLazyLoadQuery","useMutation","usePaginationFragment","usePreloadedQuery","useQueryLoader","useRefetchableFragment","useRelayEnvironment","useSubscribeToInvalidationState","useSubscription","RelayRuntime","module","exports","ConnectionHandler","applyOptimisticMutation","commitLocalUpdate","commitMutation","graphql","readInlineData","requestSubscription","fetchQuery"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/node_modules/react-relay/lib/hooks.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');\n\nvar loadEntryPoint = require('./relay-hooks/loadEntryPoint');\n\nvar _require = require('./relay-hooks/loadQuery'),\n    loadQuery = _require.loadQuery;\n\nvar RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');\n\nvar useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');\n\nvar useFragment = require('./relay-hooks/useFragment');\n\nvar useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');\n\nvar useMutation = require('./relay-hooks/useMutation');\n\nvar usePaginationFragment = require('./relay-hooks/usePaginationFragment');\n\nvar usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');\n\nvar useQueryLoader = require('./relay-hooks/useQueryLoader');\n\nvar useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');\n\nvar useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');\n\nvar useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');\n\nvar useSubscription = require('./relay-hooks/useSubscription');\n\nvar RelayRuntime = require('relay-runtime');\n\n/**\n * The public interface for Relay Hooks.\n * This will eventually become the main public interface for react-relay.\n */\nmodule.exports = {\n  ConnectionHandler: RelayRuntime.ConnectionHandler,\n  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,\n  commitLocalUpdate: RelayRuntime.commitLocalUpdate,\n  commitMutation: RelayRuntime.commitMutation,\n  graphql: RelayRuntime.graphql,\n  readInlineData: RelayRuntime.readInlineData,\n  requestSubscription: RelayRuntime.requestSubscription,\n  EntryPointContainer: EntryPointContainer,\n  RelayEnvironmentProvider: RelayEnvironmentProvider,\n  fetchQuery: RelayRuntime.fetchQuery,\n  loadQuery: loadQuery,\n  loadEntryPoint: loadEntryPoint,\n  useFragment: useFragment,\n  useLazyLoadQuery: useLazyLoadQuery,\n  useEntryPointLoader: useEntryPointLoader,\n  useQueryLoader: useQueryLoader,\n  useMutation: useMutation,\n  usePaginationFragment: usePaginationFragment,\n  usePreloadedQuery: usePreloadedQuery,\n  useRefetchableFragment: useRefetchableFragment,\n  useRelayEnvironment: useRelayEnvironment,\n  useSubscribeToInvalidationState: useSubscribeToInvalidationState,\n  useSubscription: useSubscription\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,8BAAD,CAA5B;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,yBAAD,CAAtB;AAAA,IACIG,SAAS,GAAGD,QAAQ,CAACC,SADzB;;AAGA,IAAIC,wBAAwB,GAAGJ,OAAO,CAAC,wCAAD,CAAtC;;AAEA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,mCAAD,CAAjC;;AAEA,IAAIM,WAAW,GAAGN,OAAO,CAAC,2BAAD,CAAzB;;AAEA,IAAIO,gBAAgB,GAAGP,OAAO,CAAC,gCAAD,CAA9B;;AAEA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,2BAAD,CAAzB;;AAEA,IAAIS,qBAAqB,GAAGT,OAAO,CAAC,qCAAD,CAAnC;;AAEA,IAAIU,iBAAiB,GAAGV,OAAO,CAAC,iCAAD,CAA/B;;AAEA,IAAIW,cAAc,GAAGX,OAAO,CAAC,8BAAD,CAA5B;;AAEA,IAAIY,sBAAsB,GAAGZ,OAAO,CAAC,sCAAD,CAApC;;AAEA,IAAIa,mBAAmB,GAAGb,OAAO,CAAC,mCAAD,CAAjC;;AAEA,IAAIc,+BAA+B,GAAGd,OAAO,CAAC,+CAAD,CAA7C;;AAEA,IAAIe,eAAe,GAAGf,OAAO,CAAC,+BAAD,CAA7B;;AAEA,IAAIgB,YAAY,GAAGhB,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;;;AACAiB,MAAM,CAACC,OAAP,GAAiB;EACfC,iBAAiB,EAAEH,YAAY,CAACG,iBADjB;EAEfC,uBAAuB,EAAEJ,YAAY,CAACI,uBAFvB;EAGfC,iBAAiB,EAAEL,YAAY,CAACK,iBAHjB;EAIfC,cAAc,EAAEN,YAAY,CAACM,cAJd;EAKfC,OAAO,EAAEP,YAAY,CAACO,OALP;EAMfC,cAAc,EAAER,YAAY,CAACQ,cANd;EAOfC,mBAAmB,EAAET,YAAY,CAACS,mBAPnB;EAQf1B,mBAAmB,EAAEA,mBARN;EASfK,wBAAwB,EAAEA,wBATX;EAUfsB,UAAU,EAAEV,YAAY,CAACU,UAVV;EAWfvB,SAAS,EAAEA,SAXI;EAYfF,cAAc,EAAEA,cAZD;EAafK,WAAW,EAAEA,WAbE;EAcfC,gBAAgB,EAAEA,gBAdH;EAefF,mBAAmB,EAAEA,mBAfN;EAgBfM,cAAc,EAAEA,cAhBD;EAiBfH,WAAW,EAAEA,WAjBE;EAkBfC,qBAAqB,EAAEA,qBAlBR;EAmBfC,iBAAiB,EAAEA,iBAnBJ;EAoBfE,sBAAsB,EAAEA,sBApBT;EAqBfC,mBAAmB,EAAEA,mBArBN;EAsBfC,+BAA+B,EAAEA,+BAtBlB;EAuBfC,eAAe,EAAEA;AAvBF,CAAjB"},"metadata":{},"sourceType":"script"}