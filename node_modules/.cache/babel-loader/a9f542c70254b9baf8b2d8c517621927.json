{"ast":null,"code":"var _ApprootQuery,\n    _jsxFileName = \"/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/src/Approot.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport App from \"./App\";\nimport { useLazyLoadQuery, useRelayEnvironment } from \"react-relay/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appquery = _ApprootQuery !== void 0 ? _ApprootQuery : (_ApprootQuery = require(\"./__generated__/ApprootQuery.graphql\"), _ApprootQuery.hash && _ApprootQuery.hash !== \"938e991c903a95d18e0391148e59f080\" && console.error(\"The definition of 'ApprootQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ApprootQuery); // const appMutateupdatequery = graphql`\n//   # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n//   mutation ApprootupdateBookQuery($id: ID!, $book: bookInput!) {\n//     updateBook(bookId: $id, book: $book) {\n//       id\n//       ...App_detail\n//     }\n//   }\n// `;\n\nfunction Approot(props) {\n  _s();\n\n  // const [commitupdate] =\n  //   useMutation<ApprootupdateBookQuery>(appMutateupdatequery);\n  const data = useLazyLoadQuery(appquery, {}, {\n    fetchPolicy: 'store-or-network'\n  });\n  console.log(\"approot......\");\n  console.log(data);\n  console.log(typeof useRelayEnvironment().getStore());\n  console.log(useRelayEnvironment().getStore().getSource());\n  console.log(useRelayEnvironment().getStore().getSource().get(\"1\"));\n  return /*#__PURE__*/_jsxDEV(React.Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(App, {\n      books: data.books[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Approot, \"dFH10RSZcka0gLPD4d+FLiALlfE=\", false, function () {\n  return [useLazyLoadQuery, useRelayEnvironment, useRelayEnvironment, useRelayEnvironment];\n});\n\n_c = Approot;\nexport default Approot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approot\");","map":{"version":3,"names":["React","App","useLazyLoadQuery","useRelayEnvironment","appquery","Approot","props","data","fetchPolicy","console","log","getStore","getSource","get","books"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/src/Approot.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport App from \"./App\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery, useMutation, useRelayEnvironment } from \"react-relay/hooks\";\nimport { RecordSourceSelectorProxy, Store } from \"relay-runtime\";\nimport {\n  ApprootQuery,\n  ApprootQuery$data,\n  ApprootQuery$variables,\n} from \"./__generated__/ApprootQuery.graphql\";\nimport {\n  ApprootupdateBookQuery,\n  ApprootupdateBookQuery$variables,\n} from \"./__generated__/ApprootupdateBookQuery.graphql\";\n\nconst appquery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n  query ApprootQuery {\n    books {\n      id\n      ...App_detail\n    }\n  }\n`;\n\n// const appMutateupdatequery = graphql`\n//   # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n\n//   mutation ApprootupdateBookQuery($id: ID!, $book: bookInput!) {\n//     updateBook(bookId: $id, book: $book) {\n//       id\n//       ...App_detail\n//     }\n//   }\n// `;\n\nfunction Approot(props: any) {\n  // const [commitupdate] =\n  //   useMutation<ApprootupdateBookQuery>(appMutateupdatequery);\n\n  const data = useLazyLoadQuery<ApprootQuery>(appquery, {},{fetchPolicy: 'store-or-network'});\n  console.log(\"approot......\")\n  console.log(data);\n\n\n  console.log(typeof useRelayEnvironment().getStore())\n  console.log(useRelayEnvironment().getStore().getSource())\n  console.log(useRelayEnvironment().getStore().getSource().get(\"1\"))\n\n  return (\n    <React.Suspense fallback={<div>Loading.....</div>}>\n      <App books={data.books[0]} />\n      {/* <form\n        className=\"form\"\n        onSubmit={(e: any) => {\n          e.preventDefault();\n\n          let update: any = {\n            id: e.target[0].value,\n            title: e.target[1].value,\n          };\n\n          commitupdate({\n            variables: update,\n            onCompleted: (response, errors) => {\n              console.log(\"Response received from server.\");\n            },\n            updater: (store) => {\n              (window as any).store = store;\n            },\n            onError: (err) => console.error(err),\n          });\n        }}\n      >\n        <label htmlFor=\"fname\">Book id:</label>\n        <input type=\"number\" id=\"fname\" placeholder=\"Type Book id\" /> <br></br>\n        <label htmlFor=\"fname\">Book title:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"Type Book title\" /> <br></br>\n        <input type=\"submit\" />\n      </form> */}\n    </React.Suspense>\n  );\n}\n\nexport default Approot;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA6C,OAA7C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,gBAAT,EAAwCC,mBAAxC,QAAmE,mBAAnE;;AAYA,MAAMC,QAAQ,8WAAd,C,CAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAA6B;EAAA;;EAC3B;EACA;EAEA,MAAMC,IAAI,GAAGL,gBAAgB,CAAeE,QAAf,EAAyB,EAAzB,EAA4B;IAACI,WAAW,EAAE;EAAd,CAA5B,CAA7B;EACAC,OAAO,CAACC,GAAR,CAAY,eAAZ;EACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ;EAGAE,OAAO,CAACC,GAAR,CAAY,OAAOP,mBAAmB,GAAGQ,QAAtB,EAAnB;EACAF,OAAO,CAACC,GAAR,CAAYP,mBAAmB,GAAGQ,QAAtB,GAAiCC,SAAjC,EAAZ;EACAH,OAAO,CAACC,GAAR,CAAYP,mBAAmB,GAAGQ,QAAtB,GAAiCC,SAAjC,GAA6CC,GAA7C,CAAiD,GAAjD,CAAZ;EAEA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAgB,QAAQ,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA1B;IAAA,uBACE,QAAC,GAAD;MAAK,KAAK,EAAEN,IAAI,CAACO,KAAL,CAAW,CAAX;IAAZ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GA9CQT,O;UAIMH,gB,EAKMC,mB,EACPA,mB,EACAA,mB;;;KAXLE,O;AAgDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}