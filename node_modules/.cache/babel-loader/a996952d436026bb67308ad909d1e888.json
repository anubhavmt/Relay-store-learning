{"ast":null,"code":"var _ApprootQuery;import React from\"react\";import App from\"./App\";import{useLazyLoadQuery}from\"react-relay/hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";var appquery=_ApprootQuery!==void 0?_ApprootQuery:_ApprootQuery=require(\"./__generated__/ApprootQuery.graphql\");// const appMutateupdatequery = graphql`\n//   # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n//   mutation ApprootupdateBookQuery($id: ID!, $book: bookInput!) {\n//     updateBook(bookId: $id, book: $book) {\n//       id\n//       ...App_detail\n//     }\n//   }\n// `;\nfunction Approot(props){// const [commitupdate] =\n//   useMutation<ApprootupdateBookQuery>(appMutateupdatequery);\nvar data=useLazyLoadQuery(appquery,{},{fetchPolicy:'network-only'});console.log(\"approot......\");console.log(data);return/*#__PURE__*/_jsx(React.Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Loading.....\"}),children:/*#__PURE__*/_jsx(App,{books:data.books})});}export default Approot;","map":{"version":3,"names":["React","App","useLazyLoadQuery","appquery","Approot","props","data","fetchPolicy","console","log","books"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/src/Approot.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport App from \"./App\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery, useMutation } from \"react-relay/hooks\";\nimport { RecordSourceSelectorProxy, Store } from \"relay-runtime\";\nimport {\n  ApprootQuery,\n  ApprootQuery$data,\n  ApprootQuery$variables,\n} from \"./__generated__/ApprootQuery.graphql\";\nimport {\n  ApprootupdateBookQuery,\n  ApprootupdateBookQuery$variables,\n} from \"./__generated__/ApprootupdateBookQuery.graphql\";\n\nconst appquery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n  query ApprootQuery {\n    books {\n      id\n      ...App_detail\n    }\n  }\n`;\n\n// const appMutateupdatequery = graphql`\n//   # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n\n//   mutation ApprootupdateBookQuery($id: ID!, $book: bookInput!) {\n//     updateBook(bookId: $id, book: $book) {\n//       id\n//       ...App_detail\n//     }\n//   }\n// `;\n\nfunction Approot(props: any) {\n  // const [commitupdate] =\n  //   useMutation<ApprootupdateBookQuery>(appMutateupdatequery);\n\n  const data = useLazyLoadQuery<ApprootQuery>(appquery, {},{fetchPolicy: 'network-only'});\n  console.log(\"approot......\")\n  console.log(data);\n\n  return (\n    <React.Suspense fallback={<div>Loading.....</div>}>\n      <App books={data.books} />\n      {/* <form\n        className=\"form\"\n        onSubmit={(e: any) => {\n          e.preventDefault();\n\n          let update: any = {\n            id: e.target[0].value,\n            title: e.target[1].value,\n          };\n\n          commitupdate({\n            variables: update,\n            onCompleted: (response, errors) => {\n              console.log(\"Response received from server.\");\n            },\n            updater: (store) => {\n              (window as any).store = store;\n            },\n            onError: (err) => console.error(err),\n          });\n        }}\n      >\n        <label htmlFor=\"fname\">Book id:</label>\n        <input type=\"number\" id=\"fname\" placeholder=\"Type Book id\" /> <br></br>\n        <label htmlFor=\"fname\">Book title:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"Type Book title\" /> <br></br>\n        <input type=\"submit\" />\n      </form> */}\n    </React.Suspense>\n  );\n}\n\nexport default Approot;\n"],"mappings":"kBAAA,MAAOA,MAAP,KAA6C,OAA7C,CACA,MAAOC,IAAP,KAAgB,OAAhB,CAEA,OAASC,gBAAT,KAA8C,mBAA9C,C,2CAYA,GAAMC,SAAQ,mGAAd,CAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASC,QAAT,CAAiBC,KAAjB,CAA6B,CAC3B;AACA;AAEA,GAAMC,KAAI,CAAGJ,gBAAgB,CAAeC,QAAf,CAAyB,EAAzB,CAA4B,CAACI,WAAW,CAAE,cAAd,CAA5B,CAA7B,CACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAEA,mBACE,KAAC,KAAD,CAAO,QAAP,EAAgB,QAAQ,cAAE,qCAA1B,uBACE,KAAC,GAAD,EAAK,KAAK,CAAEA,IAAI,CAACI,KAAjB,EADF,EADF,CAiCD,CAED,cAAeN,QAAf"},"metadata":{},"sourceType":"module"}