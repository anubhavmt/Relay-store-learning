{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar crypto = require('crypto');\n\nvar _require = require('graphql'),\n    print = _require.print;\n\nvar _require2 = require('path'),\n    dirname = _require2.dirname,\n    joinPath = _require2.join,\n    relativePath = _require2.relative,\n    resolvePath = _require2.resolve;\n\nvar GENERATED = './__generated__/';\n/**\n * Given a graphql`` tagged template literal, replace it with the appropriate\n * runtime artifact.\n */\n\nfunction compileGraphQLTag(t, path, state, ast) {\n  var _state$opts$eagerEsMo, _state$opts, _state$opts2, _state$opts3, _state$opts4, _state$opts$codegenCo, _state$opts5;\n\n  if (ast.definitions.length !== 1) {\n    throw new Error('BabelPluginRelay: Expected exactly one definition per graphql tag.');\n  }\n\n  var definition = ast.definitions[0];\n\n  if (definition.kind !== 'FragmentDefinition' && definition.kind !== 'OperationDefinition') {\n    throw new Error('BabelPluginRelay: Expected a fragment, mutation, query, or ' + 'subscription, got `' + definition.kind + '`.');\n  }\n\n  var eagerEsModules = (_state$opts$eagerEsMo = (_state$opts = state.opts) === null || _state$opts === void 0 ? void 0 : _state$opts.eagerEsModules) !== null && _state$opts$eagerEsMo !== void 0 ? _state$opts$eagerEsMo : false;\n  var isHasteMode = ((_state$opts2 = state.opts) === null || _state$opts2 === void 0 ? void 0 : _state$opts2.jsModuleFormat) === 'haste';\n  var isDevVariable = (_state$opts3 = state.opts) === null || _state$opts3 === void 0 ? void 0 : _state$opts3.isDevVariableName;\n  var artifactDirectory = (_state$opts4 = state.opts) === null || _state$opts4 === void 0 ? void 0 : _state$opts4.artifactDirectory;\n  var buildCommand = (_state$opts$codegenCo = (_state$opts5 = state.opts) === null || _state$opts5 === void 0 ? void 0 : _state$opts5.codegenCommand) !== null && _state$opts$codegenCo !== void 0 ? _state$opts$codegenCo : 'relay-compiler'; // Fallback is 'true'\n\n  var isDevelopment = (process.env.BABEL_ENV || process.env.NODE_ENV) !== 'production';\n  return createNode(t, state, path, definition, {\n    artifactDirectory: artifactDirectory,\n    eagerEsModules: eagerEsModules,\n    buildCommand: buildCommand,\n    isDevelopment: isDevelopment,\n    isHasteMode: isHasteMode,\n    isDevVariable: isDevVariable\n  });\n}\n/**\n * The Relay compiler generates separate modules that contain the compiled code.\n * Here we generate:\n *  - a memoized `require` call for that generated code\n *  - for development mode, runtime validation that the artifacts are up to date\n */\n\n\nfunction createNode(t, state, path, graphqlDefinition, options) {\n  var definitionName = graphqlDefinition.name && graphqlDefinition.name.value;\n\n  if (!definitionName) {\n    throw new Error('GraphQL operations and fragments must contain names');\n  }\n\n  var requiredFile = definitionName + '.graphql';\n  var requiredPath = options.isHasteMode ? requiredFile : options.artifactDirectory ? getRelativeImportPath(state, options.artifactDirectory, requiredFile) : GENERATED + requiredFile;\n  var hash = crypto.createHash('md5').update(print(graphqlDefinition), 'utf8').digest('hex');\n  var topScope = path.scope;\n\n  while (topScope.parent) {\n    topScope = topScope.parent;\n  }\n\n  var id = topScope.generateUidIdentifier(definitionName);\n  var expHash = t.MemberExpression(id, t.Identifier('hash'));\n  var expWarn = warnNeedsRebuild(t, definitionName, options.buildCommand);\n  var expWarnIfOutdated = t.LogicalExpression('&&', expHash, t.LogicalExpression('&&', t.BinaryExpression('!==', expHash, t.StringLiteral(hash)), expWarn));\n\n  if (options.eagerEsModules) {\n    var importDeclaration = t.ImportDeclaration([t.ImportDefaultSpecifier(id)], t.StringLiteral(requiredPath));\n    var program = path.findParent(function (parent) {\n      return parent.isProgram();\n    });\n    program.unshiftContainer('body', importDeclaration);\n    var expAssignAndCheck = t.SequenceExpression([expWarnIfOutdated, id]);\n    var expAssign;\n\n    if (options.isDevVariable != null) {\n      expAssign = t.ConditionalExpression(t.Identifier(options.isDevVariable), expAssignAndCheck, id);\n    } else if (options.isDevelopment) {\n      expAssign = expAssignAndCheck;\n    } else {\n      expAssign = id;\n    }\n\n    path.replaceWith(expAssign);\n  } else {\n    topScope.push({\n      id: id\n    });\n    var requireGraphQLModule = t.CallExpression(t.Identifier('require'), [t.StringLiteral(requiredPath)]);\n    var expAssignProd = t.AssignmentExpression('=', id, requireGraphQLModule);\n\n    var _expAssignAndCheck = t.SequenceExpression([expAssignProd, expWarnIfOutdated, id]);\n\n    var _expAssign;\n\n    if (options.isDevVariable != null) {\n      _expAssign = t.ConditionalExpression(t.Identifier(options.isDevVariable), _expAssignAndCheck, expAssignProd);\n    } else if (options.isDevelopment) {\n      _expAssign = _expAssignAndCheck;\n    } else {\n      _expAssign = expAssignProd;\n    }\n\n    var expVoid0 = t.UnaryExpression('void', t.NumericLiteral(0));\n    path.replaceWith(t.ConditionalExpression(t.BinaryExpression('!==', id, expVoid0), id, _expAssign));\n  }\n}\n\nfunction warnNeedsRebuild(t, definitionName, buildCommand) {\n  return t.callExpression(t.memberExpression(t.identifier('console'), t.identifier('error')), [t.stringLiteral(\"The definition of '\".concat(definitionName, \"' appears to have changed. Run \") + '`' + buildCommand + '` to update the generated files to receive the expected data.')]);\n}\n\nfunction getRelativeImportPath(state, artifactDirectory, fileToRequire) {\n  if (state.file == null) {\n    throw new Error('Babel state is missing expected file name');\n  }\n\n  var filename = state.file.opts.filename;\n  var relative = relativePath(dirname(filename), resolvePath(artifactDirectory));\n  var relativeReference = relative.length === 0 || !relative.startsWith('.') ? './' : '';\n  return relativeReference + joinPath(relative, fileToRequire);\n}\n\nmodule.exports = compileGraphQLTag;","map":{"version":3,"names":["crypto","require","_require","print","_require2","dirname","joinPath","join","relativePath","relative","resolvePath","resolve","GENERATED","compileGraphQLTag","t","path","state","ast","_state$opts$eagerEsMo","_state$opts","_state$opts2","_state$opts3","_state$opts4","_state$opts$codegenCo","_state$opts5","definitions","length","Error","definition","kind","eagerEsModules","opts","isHasteMode","jsModuleFormat","isDevVariable","isDevVariableName","artifactDirectory","buildCommand","codegenCommand","isDevelopment","process","env","BABEL_ENV","NODE_ENV","createNode","graphqlDefinition","options","definitionName","name","value","requiredFile","requiredPath","getRelativeImportPath","hash","createHash","update","digest","topScope","scope","parent","id","generateUidIdentifier","expHash","MemberExpression","Identifier","expWarn","warnNeedsRebuild","expWarnIfOutdated","LogicalExpression","BinaryExpression","StringLiteral","importDeclaration","ImportDeclaration","ImportDefaultSpecifier","program","findParent","isProgram","unshiftContainer","expAssignAndCheck","SequenceExpression","expAssign","ConditionalExpression","replaceWith","push","requireGraphQLModule","CallExpression","expAssignProd","AssignmentExpression","_expAssignAndCheck","_expAssign","expVoid0","UnaryExpression","NumericLiteral","callExpression","memberExpression","identifier","stringLiteral","concat","fileToRequire","file","filename","relativeReference","startsWith","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-learning/node_modules/babel-plugin-relay/lib/compileGraphQLTag.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar crypto = require('crypto');\n\nvar _require = require('graphql'),\n    print = _require.print;\n\nvar _require2 = require('path'),\n    dirname = _require2.dirname,\n    joinPath = _require2.join,\n    relativePath = _require2.relative,\n    resolvePath = _require2.resolve;\n\nvar GENERATED = './__generated__/';\n/**\n * Given a graphql`` tagged template literal, replace it with the appropriate\n * runtime artifact.\n */\n\nfunction compileGraphQLTag(t, path, state, ast) {\n  var _state$opts$eagerEsMo, _state$opts, _state$opts2, _state$opts3, _state$opts4, _state$opts$codegenCo, _state$opts5;\n\n  if (ast.definitions.length !== 1) {\n    throw new Error('BabelPluginRelay: Expected exactly one definition per graphql tag.');\n  }\n\n  var definition = ast.definitions[0];\n\n  if (definition.kind !== 'FragmentDefinition' && definition.kind !== 'OperationDefinition') {\n    throw new Error('BabelPluginRelay: Expected a fragment, mutation, query, or ' + 'subscription, got `' + definition.kind + '`.');\n  }\n\n  var eagerEsModules = (_state$opts$eagerEsMo = (_state$opts = state.opts) === null || _state$opts === void 0 ? void 0 : _state$opts.eagerEsModules) !== null && _state$opts$eagerEsMo !== void 0 ? _state$opts$eagerEsMo : false;\n  var isHasteMode = ((_state$opts2 = state.opts) === null || _state$opts2 === void 0 ? void 0 : _state$opts2.jsModuleFormat) === 'haste';\n  var isDevVariable = (_state$opts3 = state.opts) === null || _state$opts3 === void 0 ? void 0 : _state$opts3.isDevVariableName;\n  var artifactDirectory = (_state$opts4 = state.opts) === null || _state$opts4 === void 0 ? void 0 : _state$opts4.artifactDirectory;\n  var buildCommand = (_state$opts$codegenCo = (_state$opts5 = state.opts) === null || _state$opts5 === void 0 ? void 0 : _state$opts5.codegenCommand) !== null && _state$opts$codegenCo !== void 0 ? _state$opts$codegenCo : 'relay-compiler'; // Fallback is 'true'\n\n  var isDevelopment = (process.env.BABEL_ENV || process.env.NODE_ENV) !== 'production';\n  return createNode(t, state, path, definition, {\n    artifactDirectory: artifactDirectory,\n    eagerEsModules: eagerEsModules,\n    buildCommand: buildCommand,\n    isDevelopment: isDevelopment,\n    isHasteMode: isHasteMode,\n    isDevVariable: isDevVariable\n  });\n}\n/**\n * The Relay compiler generates separate modules that contain the compiled code.\n * Here we generate:\n *  - a memoized `require` call for that generated code\n *  - for development mode, runtime validation that the artifacts are up to date\n */\n\n\nfunction createNode(t, state, path, graphqlDefinition, options) {\n  var definitionName = graphqlDefinition.name && graphqlDefinition.name.value;\n\n  if (!definitionName) {\n    throw new Error('GraphQL operations and fragments must contain names');\n  }\n\n  var requiredFile = definitionName + '.graphql';\n  var requiredPath = options.isHasteMode ? requiredFile : options.artifactDirectory ? getRelativeImportPath(state, options.artifactDirectory, requiredFile) : GENERATED + requiredFile;\n  var hash = crypto.createHash('md5').update(print(graphqlDefinition), 'utf8').digest('hex');\n  var topScope = path.scope;\n\n  while (topScope.parent) {\n    topScope = topScope.parent;\n  }\n\n  var id = topScope.generateUidIdentifier(definitionName);\n  var expHash = t.MemberExpression(id, t.Identifier('hash'));\n  var expWarn = warnNeedsRebuild(t, definitionName, options.buildCommand);\n  var expWarnIfOutdated = t.LogicalExpression('&&', expHash, t.LogicalExpression('&&', t.BinaryExpression('!==', expHash, t.StringLiteral(hash)), expWarn));\n\n  if (options.eagerEsModules) {\n    var importDeclaration = t.ImportDeclaration([t.ImportDefaultSpecifier(id)], t.StringLiteral(requiredPath));\n    var program = path.findParent(function (parent) {\n      return parent.isProgram();\n    });\n    program.unshiftContainer('body', importDeclaration);\n    var expAssignAndCheck = t.SequenceExpression([expWarnIfOutdated, id]);\n    var expAssign;\n\n    if (options.isDevVariable != null) {\n      expAssign = t.ConditionalExpression(t.Identifier(options.isDevVariable), expAssignAndCheck, id);\n    } else if (options.isDevelopment) {\n      expAssign = expAssignAndCheck;\n    } else {\n      expAssign = id;\n    }\n\n    path.replaceWith(expAssign);\n  } else {\n    topScope.push({\n      id: id\n    });\n    var requireGraphQLModule = t.CallExpression(t.Identifier('require'), [t.StringLiteral(requiredPath)]);\n    var expAssignProd = t.AssignmentExpression('=', id, requireGraphQLModule);\n\n    var _expAssignAndCheck = t.SequenceExpression([expAssignProd, expWarnIfOutdated, id]);\n\n    var _expAssign;\n\n    if (options.isDevVariable != null) {\n      _expAssign = t.ConditionalExpression(t.Identifier(options.isDevVariable), _expAssignAndCheck, expAssignProd);\n    } else if (options.isDevelopment) {\n      _expAssign = _expAssignAndCheck;\n    } else {\n      _expAssign = expAssignProd;\n    }\n\n    var expVoid0 = t.UnaryExpression('void', t.NumericLiteral(0));\n    path.replaceWith(t.ConditionalExpression(t.BinaryExpression('!==', id, expVoid0), id, _expAssign));\n  }\n}\n\nfunction warnNeedsRebuild(t, definitionName, buildCommand) {\n  return t.callExpression(t.memberExpression(t.identifier('console'), t.identifier('error')), [t.stringLiteral(\"The definition of '\".concat(definitionName, \"' appears to have changed. Run \") + '`' + buildCommand + '` to update the generated files to receive the expected data.')]);\n}\n\nfunction getRelativeImportPath(state, artifactDirectory, fileToRequire) {\n  if (state.file == null) {\n    throw new Error('Babel state is missing expected file name');\n  }\n\n  var filename = state.file.opts.filename;\n  var relative = relativePath(dirname(filename), resolvePath(artifactDirectory));\n  var relativeReference = relative.length === 0 || !relative.startsWith('.') ? './' : '';\n  return relativeReference + joinPath(relative, fileToRequire);\n}\n\nmodule.exports = compileGraphQLTag;"],"mappings":"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"},"metadata":{},"sourceType":"script"}