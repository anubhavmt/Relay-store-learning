{"ast":null,"code":"var _ApprootQuery,\n    _ApprootAddBookQuery,\n    _jsxFileName = \"/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-learning/src/Approot.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport App from \"./App\";\nimport { useLazyLoadQuery, useMutation } from \"react-relay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appquery = _ApprootQuery !== void 0 ? _ApprootQuery : (_ApprootQuery = require(\"./__generated__/ApprootQuery.graphql\"), _ApprootQuery.hash && _ApprootQuery.hash !== \"864bcf0eacbb5308b3ee89bb00f1fab1\" && console.error(\"The definition of 'ApprootQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ApprootQuery);\nconst appMutatequery = _ApprootAddBookQuery !== void 0 ? _ApprootAddBookQuery : (_ApprootAddBookQuery = require(\"./__generated__/ApprootAddBookQuery.graphql\"), _ApprootAddBookQuery.hash && _ApprootAddBookQuery.hash !== \"eb7b9d81ad8f63ba516e551936327d03\" && console.error(\"The definition of 'ApprootAddBookQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ApprootAddBookQuery);\n\nfunction Approot() {\n  _s();\n\n  const data = useLazyLoadQuery(appquery, {});\n  const [commit, isInFlight] = useMutation(appMutatequery);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(React.Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(App, {\n      books: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        let sampeBook = {\n          title: e.target[0].value,\n          author: {\n            firstname: e.target[1].value,\n            secondname: e.target[2].value\n          }\n        };\n        let update = {\n          book: sampeBook\n        };\n        commit({\n          variables: update,\n\n          onCompleted(data) {\n            console.log(data);\n          }\n\n        });\n      },\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"Book title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        placeholder: \"Type Book title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"Author FirstName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        placeholder: \"type author first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"Author LastName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        placeholder: \"Type author lastname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Approot, \"ZOMyyzV8WS402LBN5ws8c68WOCw=\", false, function () {\n  return [useLazyLoadQuery, useMutation];\n});\n\n_c = Approot;\nexport default Approot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approot\");","map":{"version":3,"names":["React","App","useLazyLoadQuery","useMutation","appquery","appMutatequery","Approot","data","commit","isInFlight","console","log","e","preventDefault","sampeBook","title","target","value","author","firstname","secondname","update","book","variables","onCompleted"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-learning/src/Approot.tsx"],"sourcesContent":["import React from \"react\";\nimport App from \"./App\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery, useMutation } from \"react-relay\";\nimport Author from \"./Author\";\nimport { ApprootQuery } from \"./__generated__/ApprootQuery.graphql\";\nimport { bookInput } from \"./__generated__/AppAddBookQuery.graphql\";\nimport { ApprootAddBookQuery } from \"./__generated__/ApprootAddBookQuery.graphql\";\nimport { ApprootAddBookQuery$variables } from \"./__generated__/ApprootAddBookQuery.graphql\";\n\nconst appquery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n  query ApprootQuery {\n    ...App_detail\n  }\n`;\n\nconst appMutatequery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n  mutation ApprootAddBookQuery($book: bookInput!) {\n    addBook(book: $book) {\n      title\n      author {\n        ...Author_detail\n      }\n      # title\n    }\n  }\n`;\n\nfunction Approot() {\n  const data = useLazyLoadQuery<ApprootQuery>(appquery, {});\n  const [commit, isInFlight] = useMutation<ApprootAddBookQuery>(appMutatequery);\n  console.log(data);\n  return (\n    <React.Suspense fallback={<div>Loading.....</div>}>\n      <App books={data} />\n      <form\n        onSubmit={(e: any) => {\n          e.preventDefault();\n          let sampeBook: bookInput = {\n            title: e.target[0].value,\n            author: {\n              firstname: e.target[1].value,\n              secondname: e.target[2].value,\n            },\n          };\n          let update: ApprootAddBookQuery$variables = {\n            book: sampeBook,\n          };\n          commit({\n            variables: update,\n            onCompleted(data) {\n              console.log(data);\n            },\n          });\n        }}\n        className=\"form\"\n      >\n        <label htmlFor=\"fname\">Book title:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"Type Book title\" /> <br></br>\n        <label htmlFor=\"fname\">Author FirstName:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"type author first name\" />\n        <br></br>\n        <label htmlFor=\"fname\">Author LastName:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"Type author lastname\" />\n        <br></br>\n        <input type=\"submit\" />\n      </form>\n    </React.Suspense>\n  );\n}\n\nexport default Approot;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,aAA9C;;AAOA,MAAMC,QAAQ,8WAAd;AAOA,MAAMC,cAAc,saAApB;;AAaA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAMC,IAAI,GAAGL,gBAAgB,CAAeE,QAAf,EAAyB,EAAzB,CAA7B;EACA,MAAM,CAACI,MAAD,EAASC,UAAT,IAAuBN,WAAW,CAAsBE,cAAtB,CAAxC;EACAK,OAAO,CAACC,GAAR,CAAYJ,IAAZ;EACA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAgB,QAAQ,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA1B;IAAA,wBACE,QAAC,GAAD;MAAK,KAAK,EAAEA;IAAZ;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,QAAQ,EAAGK,CAAD,IAAY;QACpBA,CAAC,CAACC,cAAF;QACA,IAAIC,SAAoB,GAAG;UACzBC,KAAK,EAAEH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,KADM;UAEzBC,MAAM,EAAE;YACNC,SAAS,EAAEP,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,KADjB;YAENG,UAAU,EAAER,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC;UAFlB;QAFiB,CAA3B;QAOA,IAAII,MAAqC,GAAG;UAC1CC,IAAI,EAAER;QADoC,CAA5C;QAGAN,MAAM,CAAC;UACLe,SAAS,EAAEF,MADN;;UAELG,WAAW,CAACjB,IAAD,EAAO;YAChBG,OAAO,CAACC,GAAR,CAAYJ,IAAZ;UACD;;QAJI,CAAD,CAAN;MAMD,CAnBH;MAoBE,SAAS,EAAC,MApBZ;MAAA,wBAsBE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF,eAuBE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,WAAW,EAAC;MAA1C;QAAA;QAAA;QAAA;MAAA,QAvBF,oBAuBiE;QAAA;QAAA;QAAA;MAAA,QAvBjE,eAwBE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBF,eAyBE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,WAAW,EAAC;MAA1C;QAAA;QAAA;QAAA;MAAA,QAzBF,eA0BE;QAAA;QAAA;QAAA;MAAA,QA1BF,eA2BE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF,eA4BE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,WAAW,EAAC;MAA1C;QAAA;QAAA;QAAA;MAAA,QA5BF,eA6BE;QAAA;QAAA;QAAA;MAAA,QA7BF,eA8BE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;GAzCQD,O;UACMJ,gB,EACgBC,W;;;KAFtBG,O;AA2CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}