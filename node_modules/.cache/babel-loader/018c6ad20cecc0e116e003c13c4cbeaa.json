{"ast":null,"code":"import _slicedToArray from\"/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _ApprootQuery,_ApprootupdateBookQuery;import React from\"react\";import App from\"./App\";import{useLazyLoadQuery,useMutation}from\"react-relay/hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var appquery=_ApprootQuery!==void 0?_ApprootQuery:_ApprootQuery=require(\"./__generated__/ApprootQuery.graphql\");var appMutateupdatequery=_ApprootupdateBookQuery!==void 0?_ApprootupdateBookQuery:_ApprootupdateBookQuery=require(\"./__generated__/ApprootupdateBookQuery.graphql\");function Approot(props){var _useMutation=useMutation(appMutateupdatequery),_useMutation2=_slicedToArray(_useMutation,1),commitupdate=_useMutation2[0];var data=useLazyLoadQuery(appquery,{});console.log(data);return/*#__PURE__*/_jsxs(React.Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Loading.....\"}),children:[/*#__PURE__*/_jsx(App,{books:data.books}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:function onSubmit(e){e.preventDefault();var update={id:e.target[0].value,title:e.target[1].value};commitupdate({variables:update,onCompleted:function onCompleted(response,errors){console.log(\"Response received from server.\");},updater:function updater(store){window.store=store;},onError:function onError(err){return console.error(err);}});},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fname\",children:\"Book id:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"fname\",placeholder:\"Type Book id\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fname\",children:\"Book title:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"fname\",placeholder:\"Type Book title\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]})]});}export default Approot;","map":{"version":3,"names":["React","App","useLazyLoadQuery","useMutation","appquery","appMutateupdatequery","Approot","props","commitupdate","data","console","log","books","e","preventDefault","update","id","target","value","title","variables","onCompleted","response","errors","updater","store","window","onError","err","error"],"sources":["/Users/anubhavgupta/Documents/react_learning/graphql-react/relay-store-learning/src/Approot.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport App from \"./App\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery, useMutation } from \"react-relay/hooks\";\nimport { RecordSourceSelectorProxy, Store } from \"relay-runtime\";\nimport {\n  ApprootQuery,\n  ApprootQuery$data,\n  ApprootQuery$variables,\n} from \"./__generated__/ApprootQuery.graphql\";\nimport {\n  ApprootupdateBookQuery,\n  ApprootupdateBookQuery$variables,\n} from \"./__generated__/ApprootupdateBookQuery.graphql\";\n\nconst appquery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n  query ApprootQuery {\n    books {\n      id\n      ...App_detail\n    }\n  }\n`;\n\nconst appMutateupdatequery = graphql`\n  # Queries in graphql tags must start with the module name ('App') and end with 'Query'. Got 'allbook' instead.\n\n  mutation ApprootupdateBookQuery($id: ID!, $book: bookInput!) {\n    updateBook(bookId: $id, book: $book) {\n      id\n      ...App_detail\n    }\n  }\n`;\n\nfunction Approot(props: any) {\n  const [commitupdate] =\n    useMutation<ApprootupdateBookQuery>(appMutateupdatequery);\n\n  const data = useLazyLoadQuery<ApprootQuery>(appquery, {});\n\n  console.log(data);\n\n  return (\n    <React.Suspense fallback={<div>Loading.....</div>}>\n      <App books={data.books} />\n      <form\n        className=\"form\"\n        onSubmit={(e: any) => {\n          e.preventDefault();\n\n          let update: ApprootupdateBookQuery$variables = {\n            id: e.target[0].value,\n            title: e.target[1].value,\n          };\n\n          commitupdate({\n            variables: update,\n            onCompleted: (response, errors) => {\n              console.log(\"Response received from server.\");\n            },\n            updater: (store) => {\n              (window as any).store = store;\n            },\n            onError: (err) => console.error(err),\n          });\n        }}\n      >\n        <label htmlFor=\"fname\">Book id:</label>\n        <input type=\"number\" id=\"fname\" placeholder=\"Type Book id\" /> <br></br>\n        <label htmlFor=\"fname\">Book title:</label>\n        <input type=\"text\" id=\"fname\" placeholder=\"Type Book title\" /> <br></br>\n        <input type=\"submit\" />\n      </form>\n    </React.Suspense>\n  );\n}\n\nexport default Approot;\n"],"mappings":"+MAAA,MAAOA,MAAP,KAA6C,OAA7C,CACA,MAAOC,IAAP,KAAgB,OAAhB,CAEA,OAASC,gBAAT,CAA2BC,WAA3B,KAA8C,mBAA9C,C,wFAYA,GAAMC,SAAQ,mGAAd,CAUA,GAAMC,qBAAoB,2IAA1B,CAWA,QAASC,QAAT,CAAiBC,KAAjB,CAA6B,CAC3B,iBACEJ,WAAW,CAAyBE,oBAAzB,CADb,8CAAOG,YAAP,kBAGA,GAAMC,KAAI,CAAGP,gBAAgB,CAAeE,QAAf,CAAyB,EAAzB,CAA7B,CAEAM,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAEA,mBACE,MAAC,KAAD,CAAO,QAAP,EAAgB,QAAQ,cAAE,qCAA1B,wBACE,KAAC,GAAD,EAAK,KAAK,CAAEA,IAAI,CAACG,KAAjB,EADF,cAEE,cACE,SAAS,CAAC,MADZ,CAEE,QAAQ,CAAE,kBAACC,CAAD,CAAY,CACpBA,CAAC,CAACC,cAAF,GAEA,GAAIC,OAAwC,CAAG,CAC7CC,EAAE,CAAEH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,KAD6B,CAE7CC,KAAK,CAAEN,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,KAF0B,CAA/C,CAKAV,YAAY,CAAC,CACXY,SAAS,CAAEL,MADA,CAEXM,WAAW,CAAE,qBAACC,QAAD,CAAWC,MAAX,CAAsB,CACjCb,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACD,CAJU,CAKXa,OAAO,CAAE,iBAACC,KAAD,CAAW,CACjBC,MAAD,CAAgBD,KAAhB,CAAwBA,KAAxB,CACD,CAPU,CAQXE,OAAO,CAAE,iBAACC,GAAD,QAASlB,QAAO,CAACmB,KAAR,CAAcD,GAAd,CAAT,EARE,CAAD,CAAZ,CAUD,CApBH,wBAsBE,cAAO,OAAO,CAAC,OAAf,sBAtBF,cAuBE,cAAO,IAAI,CAAC,QAAZ,CAAqB,EAAE,CAAC,OAAxB,CAAgC,WAAW,CAAC,cAA5C,EAvBF,kBAuBgE,aAvBhE,cAwBE,cAAO,OAAO,CAAC,OAAf,yBAxBF,cAyBE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,OAAtB,CAA8B,WAAW,CAAC,iBAA1C,EAzBF,kBAyBiE,aAzBjE,cA0BE,cAAO,IAAI,CAAC,QAAZ,EA1BF,GAFF,GADF,CAiCD,CAED,cAAetB,QAAf"},"metadata":{},"sourceType":"module"}